import tweepy
#import thread
import sys
try:    
    import thread 
except ImportError:
    import _thread as thread #Py3K changed it.

#consumer key, consumer secret, access token, access secret.                                                                                             
consumer_key = 'E3xLP2DJVCojAuRc4dsIQhOhH'
consumer_secret = '46e1t5l5uZDUY3WfuNf0NwzsNVdPnJS7qtVjVc6HKwxfH0BYX4'

access_key = '398425873-SL80lXVpCqZN8zTTNWSz6pBWRdy1CwzdWQlRrBEu'
access_secret = 'FAmHxrdwJfnrcjRVKvuxVRpoQfezjS7npTc6dH20EfwAq'

def deleteThread(api, objectId):
    try:
        api.destroy_status(objectId)
        print ("Deleted:", objectId)
    except:
        print ("Failed to delete:", objectId)

def oauth_login(consumer_key, consumer_secret):
    """Authenticate with twitter using OAuth"""
    
    auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
    auth_url = auth.get_authorization_url()
    
    verify_code = raw_input("Authenticate at %s and then enter you verification code here > " % auth_url) 
    auth.get_access_token(verify_code)
    
    return tweepy.API(auth)

def batch_delete(api):
    print ("You are about to Delete all tweets from the account @%s." % api.verify_credentials().screen_name)
    print ("Does this sound ok? There is no undo! Type yes to carry out this action.")
    do_delete = input("> ")
    if do_delete.lower() == 'yes':
        for status in tweepy.Cursor(api.user_timeline).items():
            try:
                #api.destroy_status(status.id)
                #print "Deleted:", status.id
                thread.start_new_thread( deleteThread, (api, status.id, ) )
            except:
                print ("Failed to delete:", status.id)

if __name__ == "__main__":
    #authorize twitter, initialize tweepy
    auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
    auth.set_access_token(access_key, access_secret)
    api = tweepy.API(auth)
    print("Authenticated as: %s" % api.me().screen_name)
    
    batch_delete(api)
